#!/usr/bin/env python

import rospy
from std_msgs.msg import Float64
from sensor_msgs.msg import JointState
import json

def callback(data):
    
    #rospy.loginfo(data.position[2, 3, 7, 8, 9, 10, 11, 12, 13])
    input_var = input('Enter 1 when you wish to record a position\nEnter 2 to finsih\n')
    if input_var == 1:
        rospy.loginfo("Getting joint angles")
        pose = []
        pose.append(round(data.position[2], 3))
        #pose.append(data.position[3]) # bellows joint. needed?
        pose.append(round(data.position[7], 3))
        pose.append(round(data.position[8], 3))
        pose.append(round(data.position[9], 3))
        pose.append(round(data.position[10], 3))
        pose.append(round(data.position[11], 3))
        pose.append(round(data.position[12], 3))
        pose.append(round(data.position[13], 3))
        pose_arr.append(pose)
        pose_duration = input('Enter the amount of time you wish to hold this pose for in seconds\n')
        duration_arr.append(pose_duration)
        input_var = 0
    elif input_var == 2:
        rospy.loginfo('writing to file')
        #file_name = input('name your movement file: ')
        dictionary = {
            "poses": pose_arr,
            "durations": duration_arr
        }
        json_object = json.dumps(dictionary, indent=4)
        with open("output.json", 'w') as outfile:
            outfile.write(json_object)
        rospy.signal_shutdown('killing node')

        

def statereader():
    rospy.init_node('state_reader', anonymous=True)
    rospy.Subscriber("joint_states", JointState, callback)
    rospy.spin()


if __name__ == "__main__":
    pose_arr = []
    duration_arr = []
    statereader()

